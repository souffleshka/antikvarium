const mongoose = require("mongoose");
const dotenv = require("dotenv").config();

const User = require("./models/User");
const Lot = require("./models/Lot");

const lotsData = [
  {
    image: "book.jpg",
    title: "–†–µ–¥–∫–∞—è –∞–Ω—Ç–∏–∫–≤–∞—Ä–Ω–∞—è –∫–Ω–∏–≥–∞",
    description: "–°—Ç–∞—Ä–∏–Ω–Ω–∞—è –∫–Ω–∏–≥–∞ –≤ –∫–æ–∂–∞–Ω–æ–º –ø–µ—Ä–µ–ø–ª–µ—Ç–µ, –∏–∑–¥–∞–Ω–Ω–∞—è –≤ –Ω–∞—á–∞–ª–µ XX –≤–µ–∫–∞. –û—Ç–ª–∏—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ –º–µ—Å—Ç–µ. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä–æ–≤ —Å—Ç–∞—Ä–∏–Ω–Ω—ã—Ö –∏–∑–¥–∞–Ω–∏–π.",
    startPrice: 150
  },
  {
    image: "chair.jpg", 
    title: "–í–∏–Ω—Ç–∞–∂–Ω–æ–µ –∫—Ä–µ—Å–ª–æ",
    description: "–≠–ª–µ–≥–∞–Ω—Ç–Ω–æ–µ –∫—Ä–µ—Å–ª–æ –≤ —Å—Ç–∏–ª–µ –∞—Ä-–¥–µ–∫–æ 1930-—Ö –≥–æ–¥–æ–≤. –î–µ—Ä–µ–≤—è–Ω–Ω–∞—è –æ—Å–Ω–æ–≤–∞ —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –æ–±–∏–≤–∫–æ–π. –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –º–µ–±–µ–ª–∏ –¥–ª—è —Ü–µ–Ω–∏—Ç–µ–ª–µ–π –≤–∏–Ω—Ç–∞–∂–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞.",
    startPrice: 300
  },
  {
    image: "jug.jpg",
    title: "–§–∞—Ä—Ñ–æ—Ä–æ–≤—ã–π –∫—É–≤—à–∏–Ω",
    description: "–ê–Ω—Ç–∏–∫–≤–∞—Ä–Ω—ã–π —Ñ–∞—Ä—Ñ–æ—Ä–æ–≤—ã–π –∫—É–≤—à–∏–Ω —Å —Ä—É—á–Ω–æ–π —Ä–æ—Å–ø–∏—Å—å—é. –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω –≤ –∫–æ–Ω—Ü–µ XIX –≤–µ–∫–∞. –ò–∑—ã—Å–∫–∞–Ω–Ω—ã–π –¥–µ–∫–æ—Ä –∏ –æ—Ç–ª–∏—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–µ–ª–∞—é—Ç –µ–≥–æ —Ü–µ–Ω–Ω—ã–º —ç–∫—Å–ø–æ–Ω–∞—Ç–æ–º.",
    startPrice: 200
  },
  {
    image: "lamp.jpg",
    title: "–ë—Ä–æ–Ω–∑–æ–≤–∞—è –Ω–∞—Å—Ç–æ–ª—å–Ω–∞—è –ª–∞–º–ø–∞",
    description: "–†–æ—Å–∫–æ—à–Ω–∞—è –±—Ä–æ–Ω–∑–æ–≤–∞—è –ª–∞–º–ø–∞ —Å –∞–±–∞–∂—É—Ä–æ–º –∏–∑ —à–µ–ª–∫–∞. –°–æ–∑–¥–∞–Ω–∞ –≤ —Å—Ç–∏–ª–µ –º–æ–¥–µ—Ä–Ω –Ω–∞—á–∞–ª–∞ XX –≤–µ–∫–∞. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∏ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.",
    startPrice: 250
  },
  {
    image: "newspaper.jpg",
    title: "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è –≥–∞–∑–µ—Ç–∞",
    description: "–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –≥–∞–∑–µ—Ç–∞ –æ—Ç 9 –º–∞—è 1945 –≥–æ–¥–∞ —Å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º –æ –ü–æ–±–µ–¥–µ. –†–µ–¥–∫–∏–π –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ –æ—Ç–ª–∏—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏. –¶–µ–Ω–Ω—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä–æ–≤.",
    startPrice: 500
  },
  {
    image: "old_clock.jpg",
    title: "–ê–Ω—Ç–∏–∫–≤–∞—Ä–Ω—ã–µ –Ω–∞—Å—Ç–µ–Ω–Ω—ã–µ —á–∞—Å—ã",
    description: "–°—Ç–∞—Ä–∏–Ω–Ω—ã–µ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–µ —á–∞—Å—ã —Å –¥–µ—Ä–µ–≤—è–Ω–Ω—ã–º –∫–æ—Ä–ø—É—Å–æ–º. –†–∞–±–æ—Ç–∞—é—Ç –∏—Å–ø—Ä–∞–≤–Ω–æ, –∏–º–µ—é—Ç –∫—Ä–∞—Å–∏–≤—ã–π —Ü–∏—Ñ–µ—Ä–±–ª–∞—Ç. –°–æ–∑–¥–∞–Ω—ã –≤ –Ω–∞—á–∞–ª–µ XX –≤–µ–∫–∞ –º–∞—Å—Ç–µ—Ä–æ–º-—á–∞—Å–æ–≤—â–∏–∫–æ–º.",
    startPrice: 400
  },
  {
    image: "phonograph.jpg",
    title: "–ü–∞—Ç–µ—Ñ–æ–Ω 1920-—Ö –≥–æ–¥–æ–≤",
    description: "–†–µ–¥–∫–∏–π –ø–∞—Ç–µ—Ñ–æ–Ω –≤ —Ä–∞–±–æ—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏. –î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –∫–æ—Ä–ø—É—Å —Å –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–º —Ä—É–ø–æ—Ä–æ–º. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö –≥—Ä–∞–º–º–æ—Ñ–æ–Ω–Ω—ã—Ö –ø–ª–∞—Å—Ç–∏–Ω–æ–∫.",
    startPrice: 800
  },
  {
    image: "photo_camera.jpg",
    title: "–§–æ—Ç–æ–∞–ø–ø–∞—Ä–∞—Ç Leica 1950-—Ö",
    description: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ñ–æ—Ç–æ–∞–ø–ø–∞—Ä–∞—Ç Leica –≤ –æ—Ç–ª–∏—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏. –ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Ç —Å –æ–±—ä–µ–∫—Ç–∏–≤–æ–º –∏ –∫–æ–∂–∞–Ω—ã–º —á–µ—Ö–ª–æ–º. –ú–µ—á—Ç–∞ –ª—é–±–æ–≥–æ –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä–∞ —Ñ–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∏.",
    startPrice: 1200
  },
  {
    image: "picture.jpg",
    title: "–ö–∞—Ä—Ç–∏–Ω–∞ –º–∞—Å–ª–æ–º",
    description: "–ê–Ω—Ç–∏–∫–≤–∞—Ä–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∞ –º–∞—Å–ª–æ–º –Ω–∞ —Ö–æ–ª—Å—Ç–µ. –ü–µ–π–∑–∞–∂ –≤ —Å—Ç–∏–ª–µ –∏–º–ø—Ä–µ—Å—Å–∏–æ–Ω–∏–∑–º–∞. –ü–æ–¥–ø–∏—Å—å —Ö—É–¥–æ–∂–Ω–∏–∫–∞ –∏ –¥–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è - 1910 –≥–æ–¥. –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Ä–∞–º–∞ –≤–∫–ª—é—á–µ–Ω–∞.",
    startPrice: 600
  },
  {
    image: "samovar.jpg",
    title: "–†—É—Å—Å–∫–∏–π —Å–∞–º–æ–≤–∞—Ä",
    description: "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —Ä—É—Å—Å–∫–∏–π —Å–∞–º–æ–≤–∞—Ä –∏–∑ –ª–∞—Ç—É–Ω–∏. –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω –≤ –¢—É–ª–µ –≤ –∫–æ–Ω—Ü–µ XIX –≤–µ–∫–∞. –û—Ç–ª–∏—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –≤—Å–µ –¥–µ—Ç–∞–ª–∏ –Ω–∞ –º–µ—Å—Ç–µ. –°–∏–º–≤–æ–ª —Ä—É—Å—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã.",
    startPrice: 350
  },
  {
    image: "statuette.jpg",
    title: "–ë—Ä–æ–Ω–∑–æ–≤–∞—è —Å—Ç–∞—Ç—É—ç—Ç–∫–∞",
    description: "–ò–∑—è—â–Ω–∞—è –±—Ä–æ–Ω–∑–æ–≤–∞—è —Å—Ç–∞—Ç—É—ç—Ç–∫–∞ –≤ —Å—Ç–∏–ª–µ –∞—Ä-–Ω—É–≤–æ. –ò–∑–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–∞–Ω—Ü—É—é—â—É—é —Ñ–∏–≥—É—Ä—É. –°–æ–∑–¥–∞–Ω–∞ —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–º —Å–∫—É–ª—å–ø—Ç–æ—Ä–æ–º –≤ –Ω–∞—á–∞–ª–µ XX –≤–µ–∫–∞. –í—ã—Å–æ—Ç–∞ 25 —Å–º.",
    startPrice: 450
  }
];

const createLots = async () => {
  try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await mongoose.connect(process.env.MONGO_URL, {
      dbName: "Dream_Nest",
    });
    
    console.log("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");

    // –ù–∞—Ö–æ–¥–∏–º –∞–¥–º–∏–Ω–∞
    const admin = await User.findOne({ isAdmin: true });
    if (!admin) {
      console.error("–ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∞.");
      return;
    }

    console.log(`–ù–∞–π–¥–µ–Ω –∞–¥–º–∏–Ω: ${admin.username}`);

    // –°–æ–∑–¥–∞–µ–º –ª–æ—Ç—ã
    for (let i = 0; i < lotsData.length; i++) {
      const lotData = lotsData[i];
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—É—é –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è (–æ—Ç 1 –¥–æ 30 –¥–Ω–µ–π –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã)
      const endDate = new Date();
      endDate.setDate(endDate.getDate() + Math.floor(Math.random() * 30) + 1);
      
      const lot = new Lot({
        title: lotData.title,
        description: lotData.description,
        startPrice: lotData.startPrice,
        currentPrice: lotData.startPrice,
        endDate: endDate,
        imageUrl: `public/uploads/${lotData.image}`,
        status: "active",
        creator: admin._id
      });

      await lot.save();
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –ª–æ—Ç: ${lotData.title} (–æ–∫–æ–Ω—á–∞–Ω–∏–µ: ${endDate.toLocaleDateString()})`);
    }

    console.log(`\nüéâ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ ${lotsData.length} –ª–æ—Ç–æ–≤!`);
    
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ª–æ—Ç–æ–≤:", error);
  } finally {
    await mongoose.connection.close();
    console.log("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ");
  }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ª–æ—Ç–æ–≤
createLots();
